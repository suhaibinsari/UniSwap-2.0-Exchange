{"ast":null,"code":"import { NativeCurrency, Token } from '../model';\nimport { Mainnet, Kovan } from '../model/chain/ethereum';\nimport { BSC, BSCTestnet } from '../model/chain/bsc';\nexport const Ether = new NativeCurrency('Ether', 'ETH', Mainnet.chainId);\nexport const Dai = new Token('Dai', 'DAI', Mainnet.chainId, '0x6B175474E89094C44Da98b954EedeAC495271d0F');\nexport const KovanEther = new NativeCurrency('Kovan Ether', 'KETH', Kovan.chainId);\nexport const KovanDai = new Token('Dai', 'DAI', Kovan.chainId, '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa');\nexport const BNB = new NativeCurrency('Binance Coin', 'BNB', BSC.chainId);\nexport const BUSD = new Token('Binance USD', 'BUSD', BSC.chainId, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56');\nexport const TestBNB = new NativeCurrency('Test Binance Coin', 'TBNB', BSCTestnet.chainId);\nexport const TestBUSD = new Token('Test Binance USD', 'TBUSD', BSCTestnet.chainId, '0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47');\nexport const NATIVE_CURRENCY = {\n  [Mainnet.chainId]: Ether,\n  [Kovan.chainId]: KovanEther,\n  [BSC.chainId]: BNB,\n  [BSCTestnet.chainId]: TestBNB\n};","map":{"version":3,"sources":["../../../../src/constants/currencies.ts"],"names":[],"mappings":"AAAA,SAAS,cAAc,EAAE,KAAK,QAAQ,UAAU;AAChD,SAAS,OAAO,EAAE,KAAK,QAAQ,yBAAyB;AACxD,SAAS,GAAG,EAAE,UAAU,QAAQ,oBAAoB;AAEpD,OAAO,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC;AACxE,OAAO,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,4CAA4C,CAAC;AAEzG,OAAO,MAAM,UAAU,GAAG,IAAI,cAAc,CAAC,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC;AAClF,OAAO,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,4CAA4C,CAAC;AAE5G,OAAO,MAAM,GAAG,GAAG,IAAI,cAAc,CAAC,cAAc,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC;AACzE,OAAO,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAE,4CAA4C,CAAC;AAE/G,OAAO,MAAM,OAAO,GAAG,IAAI,cAAc,CAAC,mBAAmB,EAAE,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC;AAC1F,OAAO,MAAM,QAAQ,GAAG,IAAI,KAAK,CAC/B,kBAAkB,EAClB,OAAO,EACP,UAAU,CAAC,OAAO,EAClB,4CAA4C,CAC7C;AAED,OAAO,MAAM,eAAe,GAAG;EAC7B,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK;EACxB,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU;EAC3B,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG;EAClB,CAAC,UAAU,CAAC,OAAO,GAAG;CACvB","sourceRoot":"","sourcesContent":["import { NativeCurrency, Token } from '../model';\nimport { Mainnet, Kovan } from '../model/chain/ethereum';\nimport { BSC, BSCTestnet } from '../model/chain/bsc';\nexport const Ether = new NativeCurrency('Ether', 'ETH', Mainnet.chainId);\nexport const Dai = new Token('Dai', 'DAI', Mainnet.chainId, '0x6B175474E89094C44Da98b954EedeAC495271d0F');\nexport const KovanEther = new NativeCurrency('Kovan Ether', 'KETH', Kovan.chainId);\nexport const KovanDai = new Token('Dai', 'DAI', Kovan.chainId, '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa');\nexport const BNB = new NativeCurrency('Binance Coin', 'BNB', BSC.chainId);\nexport const BUSD = new Token('Binance USD', 'BUSD', BSC.chainId, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56');\nexport const TestBNB = new NativeCurrency('Test Binance Coin', 'TBNB', BSCTestnet.chainId);\nexport const TestBUSD = new Token('Test Binance USD', 'TBUSD', BSCTestnet.chainId, '0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47');\nexport const NATIVE_CURRENCY = {\n    [Mainnet.chainId]: Ether,\n    [Kovan.chainId]: KovanEther,\n    [BSC.chainId]: BNB,\n    [BSCTestnet.chainId]: TestBNB,\n};\n//# sourceMappingURL=currencies.js.map"]},"metadata":{},"sourceType":"module"}