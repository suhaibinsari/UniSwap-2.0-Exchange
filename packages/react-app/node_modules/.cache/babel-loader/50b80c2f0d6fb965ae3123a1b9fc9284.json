{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { useDebounce, useEthers } from '../../../hooks';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function BlockNumberProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const {\n    library,\n    chainId\n  } = useEthers();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  const {\n    isActive\n  } = useWindow();\n  useEffect(() => subscribeToNewBlock(library, chainId, dispatch, isActive), [library, chainId, isActive]);\n  const debouncedState = useDebounce(state, 100);\n  const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n  return _jsx(BlockNumberContext.Provider, {\n    value: blockNumber,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/blockNumber/provider.tsx"],"names":[],"mappings":";AAAA,SAAoB,SAAS,EAAE,UAAU,QAAQ,OAAO;AACxD,SAAS,kBAAkB,QAAQ,WAAW;AAC9C,SAAS,kBAAkB,QAAQ,mBAAmB;AACtD,SAAS,WAAW,EAAE,SAAS,QAAQ,gBAAgB;AACvD,SAAS,mBAAmB,QAAQ,+BAA+B;AACnE,SAAS,SAAS,QAAQ,cAAc;AAMxC;;AAEG;AACH,OAAM,SAAU,mBAAmB,OAAoB;EAAA,IAAnB;IAAE;EAAQ,CAAS;EACrD,MAAM;IAAE,OAAO;IAAE;EAAO,CAAE,GAAG,SAAS,EAAE;EACxC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,kBAAkB,EAAE,CAAA,CAAE,CAAC;EAC5D,MAAM;IAAE;EAAQ,CAAE,GAAG,SAAS,EAAE;EAEhC,SAAS,CAAC,MAAM,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;EAExG,MAAM,cAAc,GAAG,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC;EAC9C,MAAM,WAAW,GAAG,OAAO,KAAK,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,SAAS;EAE/E,OAAO,IAAA,CAAC,kBAAkB,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE,WAAW;IAAE,QAAQ,EAAE;EAAQ,CAAA,CAAI;AAChF","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { useDebounce, useEthers } from '../../../hooks';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function BlockNumberProvider({ children }) {\n    const { library, chainId } = useEthers();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    const { isActive } = useWindow();\n    useEffect(() => subscribeToNewBlock(library, chainId, dispatch, isActive), [library, chainId, isActive]);\n    const debouncedState = useDebounce(state, 100);\n    const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n    return _jsx(BlockNumberContext.Provider, { value: blockNumber, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}