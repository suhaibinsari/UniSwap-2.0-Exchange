{"ast":null,"code":"import { utils } from 'ethers';\nimport MultiCall from './MultiCall.json';\nimport MultiCall2 from './MultiCall2.json';\nimport ERC20 from './ERC20.json';\nimport ERC20Mock from './ERC20Mock.json';\nimport BlockNumberContract from './BlockNumber.json';\nconst Interface = utils.Interface;\nconst MultiCallABI = new Interface(MultiCall.abi);\nexport { MultiCall, MultiCallABI };\nconst MultiCall2ABI = new Interface(MultiCall2.abi);\nexport { MultiCall2, MultiCall2ABI };\nconst ERC20Interface = new Interface(ERC20.abi);\nexport { ERC20, ERC20Interface };\nconst ERC20MockInterface = new Interface(ERC20Mock.abi);\nexport { ERC20Mock, ERC20MockInterface };\nexport { BlockNumberContract };\nexport * from './doubler';\nexport * from './timestamp';\nexport * from './reverter';","map":{"version":3,"sources":["../../../../../src/constants/abi/index.ts"],"names":[],"mappings":"AAAA,SAAS,KAAK,QAAQ,QAAQ;AAC9B,OAAO,SAAS,MAAM,kBAAkB;AACxC,OAAO,UAAU,MAAM,mBAAmB;AAC1C,OAAO,KAAK,MAAM,cAAc;AAChC,OAAO,SAAS,MAAM,kBAAkB;AACxC,OAAO,mBAAmB,MAAM,oBAAoB;AAEpD,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS;AAEjC,MAAM,YAAY,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;AAEjD,SAAS,SAAS,EAAE,YAAY;AAEhC,MAAM,aAAa,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC;AAEnD,SAAS,UAAU,EAAE,aAAa;AAElC,MAAM,cAAc,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;AAE/C,SAAS,KAAK,EAAE,cAAc;AAE9B,MAAM,kBAAkB,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;AAEvD,SAAS,SAAS,EAAE,kBAAkB;AAEtC,SAAS,mBAAmB;AAE5B,cAAc,WAAW;AACzB,cAAc,aAAa;AAC3B,cAAc,YAAY","sourceRoot":"","sourcesContent":["import { utils } from 'ethers';\nimport MultiCall from './MultiCall.json';\nimport MultiCall2 from './MultiCall2.json';\nimport ERC20 from './ERC20.json';\nimport ERC20Mock from './ERC20Mock.json';\nimport BlockNumberContract from './BlockNumber.json';\nconst Interface = utils.Interface;\nconst MultiCallABI = new Interface(MultiCall.abi);\nexport { MultiCall, MultiCallABI };\nconst MultiCall2ABI = new Interface(MultiCall2.abi);\nexport { MultiCall2, MultiCall2ABI };\nconst ERC20Interface = new Interface(ERC20.abi);\nexport { ERC20, ERC20Interface };\nconst ERC20MockInterface = new Interface(ERC20Mock.abi);\nexport { ERC20Mock, ERC20MockInterface };\nexport { BlockNumberContract };\nexport * from './doubler';\nexport * from './timestamp';\nexport * from './reverter';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}