{"ast":null,"code":"// NOTE: We explicitly export the symbols in the root index.ts file to have better control over package's public API.\nexport { ChainId, BNB, BUSD, DEFAULT_SUPPORTED_CHAINS, Dai, ERC20, ERC20Interface, ERC20Mock, ERC20MockInterface, Ether, KovanDai, KovanEther, MultiCall, MultiCall2, MultiCall2ABI, MultiCallABI, NATIVE_CURRENCY, TestBNB, TestBUSD } from './constants';\nexport { DAppProvider, getStoredTransactionState, multicall, multicall2, useNetwork } from './providers';\nexport { useBlockMeta, useLogs, useRawLogs, useBlockNumber, useBlockNumbers, useCall, useCalls, useConfig, useUpdateConfig, useContractCall, useContractCalls, useChainCall, useChainCalls, useChainMeta, useChainState, useContractFunction, useEtherBalance, useEthers, useGasPrice, useLookupAddress, useMulticallAddress, useNotifications, useSendTransaction, useToken, useTokenAllowance, useTokenBalance, useTokenList, useTransactions, useRawCall, useRawCalls, useResolveName } from './hooks';\nexport { Currency, CurrencyValue, FiatCurrency, NativeCurrency, Token, transactionErrored } from './model';\nexport * from './model/chain';\nexport { isLocalChain, isTestChain, addressEqual, compareAddress, shortenAddress, shortenIfAddress, shortenIfTransactionHash, shortenTransactionHash, getChainName, getExplorerAddressLink, getExplorerTransactionLink } from './helpers';","map":{"version":3,"sources":["../../../src/index.ts"],"names":[],"mappings":"AAAA;AAGA,SACE,OAAO,EACP,GAAG,EACH,IAAI,EACJ,wBAAwB,EACxB,GAAG,EACH,KAAK,EACL,cAAc,EACd,SAAS,EACT,kBAAkB,EAClB,KAAK,EACL,QAAQ,EACR,UAAU,EACV,SAAS,EACT,UAAU,EACV,aAAa,EACb,YAAY,EACZ,eAAe,EACf,OAAO,EACP,QAAQ,QACH,aAAa;AAepB,SAAS,YAAY,EAAE,yBAAyB,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,QAAQ,aAAa;AAExG,SACE,YAAY,EACZ,OAAO,EACP,UAAU,EACV,cAAc,EACd,eAAe,EACf,OAAO,EACP,QAAQ,EACR,SAAS,EACT,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,aAAa,EACb,mBAAmB,EACnB,eAAe,EACf,SAAS,EACT,WAAW,EACX,gBAAgB,EAChB,mBAAmB,EACnB,gBAAgB,EAChB,kBAAkB,EAClB,QAAQ,EACR,iBAAiB,EACjB,eAAe,EACf,YAAY,EACZ,eAAe,EACf,UAAU,EACV,WAAW,EACX,cAAc,QACT,SAAS;AAShB,SAAS,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE,cAAc,EAAE,KAAK,EAAE,kBAAkB,QAAQ,SAAS;AAE1G,cAAc,eAAe;AAC7B,SACE,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,wBAAwB,EACxB,sBAAsB,EACtB,YAAY,EACZ,sBAAsB,EACtB,0BAA0B,QACrB,WAAW","sourceRoot":"","sourcesContent":["// NOTE: We explicitly export the symbols in the root index.ts file to have better control over package's public API.\nexport { ChainId, BNB, BUSD, DEFAULT_SUPPORTED_CHAINS, Dai, ERC20, ERC20Interface, ERC20Mock, ERC20MockInterface, Ether, KovanDai, KovanEther, MultiCall, MultiCall2, MultiCall2ABI, MultiCallABI, NATIVE_CURRENCY, TestBNB, TestBUSD, } from './constants';\nexport { DAppProvider, getStoredTransactionState, multicall, multicall2, useNetwork } from './providers';\nexport { useBlockMeta, useLogs, useRawLogs, useBlockNumber, useBlockNumbers, useCall, useCalls, useConfig, useUpdateConfig, useContractCall, useContractCalls, useChainCall, useChainCalls, useChainMeta, useChainState, useContractFunction, useEtherBalance, useEthers, useGasPrice, useLookupAddress, useMulticallAddress, useNotifications, useSendTransaction, useToken, useTokenAllowance, useTokenBalance, useTokenList, useTransactions, useRawCall, useRawCalls, useResolveName, } from './hooks';\nexport { Currency, CurrencyValue, FiatCurrency, NativeCurrency, Token, transactionErrored } from './model';\nexport * from './model/chain';\nexport { isLocalChain, isTestChain, addressEqual, compareAddress, shortenAddress, shortenIfAddress, shortenIfTransactionHash, shortenTransactionHash, getChainName, getExplorerAddressLink, getExplorerTransactionLink, } from './helpers';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}