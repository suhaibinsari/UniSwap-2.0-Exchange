{"ast":null,"code":"/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function blockNumberReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const current = state[action.chainId];\n  if (!current || action.blockNumber > current) {\n    return Object.assign(Object.assign({}, state), {\n      [action.chainId]: action.blockNumber\n    });\n  }\n  return state;\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/common/reducer.ts"],"names":[],"mappings":"AAYA;;AAEG;AACH,OAAM,SAAU,kBAAkB,GAAyD;EAAA,IAAxD,KAAA,uEAA0B,CAAA,CAAE;EAAA,IAAE,MAA0B;EACzF,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;EACrC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,WAAW,GAAG,OAAO,EAAE;IAC5C,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACK,KAAK,CAAA,EAAA;MACR,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;IAAW,CAAA,CAAA;EAEvC;EACD,OAAO,KAAK;AACd","sourceRoot":"","sourcesContent":["/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function blockNumberReducer(state = {}, action) {\n    const current = state[action.chainId];\n    if (!current || action.blockNumber > current) {\n        return Object.assign(Object.assign({}, state), { [action.chainId]: action.blockNumber });\n    }\n    return state;\n}\n//# sourceMappingURL=reducer.js.map"]},"metadata":{},"sourceType":"module"}