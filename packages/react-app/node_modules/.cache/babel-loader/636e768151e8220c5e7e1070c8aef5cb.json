{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abis } from \"@my-app/contracts\";\nimport { useCall } from \"@usedapp/core\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { useEffect } from \"react\";\nimport { ROUTER_ADDRESS } from \"../config\";\nexport const getAvailableTokens = pools => pools.reduce((prev, curr) => {\n  prev[curr.token0Address] = curr.token0Name;\n  prev[curr.token1Address] = curr.token1Name;\n  return prev;\n}, {});\nexport const getCounterpartTokens = (pools, fromToken) => pools.filter(cur => cur.token0Address === fromToken || cur.token1Address).reduce((prev, curr) => {\n  if (curr.token0Address === fromToken) {\n    prev[curr.token1Address] = curr.token1Name;\n  } else if (curr.token1Address === fromToken) {\n    prev[curr.token0Address] = curr.token0Name;\n  }\n  return prev;\n}, {});\nexport const findPoolByTokens = (pools, fromToken, toToken) => {\n  if (!Array.isArray(pools) || !fromToken || !toToken) return undefined;\n  return pools.find(cur => cur.token0Address === fromToken && cur.token1Address === toToken || cur.token1Address === fromToken && cur.token0Address === toToken);\n};\nexport const isOperationPending = operationState => operationState.status === \"PendingSignature\" || operationState.status === \"Mining\";\nexport const isOperationFailed = operationState => operationState.status === \"Fail\" || operationState.status === \"Exception\";\nexport const isOperationSucceeded = operationState => operationState.status === \"Success\";\nexport const getFailureMessage = (swapApproveState, swapExecuteState) => {\n  if (isOperationPending(swapApproveState) || isOperationPending(swapExecuteState)) {\n    return undefined;\n  }\n  if (isOperationFailed(swapApproveState)) {\n    return \"Approval failed - \" + swapApproveState.errorMessage;\n  }\n  if (isOperationFailed(swapExecuteState)) {\n    return \"Swap failed - \" + swapExecuteState.errorMessage;\n  }\n  return undefined;\n};\nexport const getSuccessMessage = (swapApproveState, swapExecuteState) => {\n  if (isOperationPending(swapExecuteState) || isOperationPending(swapApproveState)) {\n    return undefined;\n  }\n  if (isOperationSucceeded(swapExecuteState)) {\n    return \"Swap executed successfully\";\n  }\n  if (isOperationSucceeded(swapApproveState)) {\n    return \"Approval successful\";\n  }\n  return undefined;\n};\nexport const useAmountsOut = (pairAddress, amountIn, fromToken, toToken) => {\n  _s();\n  var _useCall;\n  const isValidAmountIn = amountIn.gt(parseUnits(\"0\"));\n  const areParamsValid = !!(pairAddress && isValidAmountIn && fromToken && toToken);\n  const {\n    error,\n    value\n  } = (_useCall = useCall(areParamsValid && {\n    contract: new Contract(ROUTER_ADDRESS, abis.router02),\n    method: \"getAmountsOut\",\n    args: [amountIn, [fromToken, toToken]]\n  })) !== null && _useCall !== void 0 ? _useCall : {};\n  return error ? parseUnits(\"0\") : value === null || value === void 0 ? void 0 : value.amounts[1];\n};\n_s(useAmountsOut, \"O1/dri1quJgQ3w+3QCAa7O9sZ2w=\", false, function () {\n  return [useCall];\n});\nexport const useOnClickOutside = (ref, handler) => {\n  _s2();\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n};\n_s2(useOnClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["Contract","abis","useCall","parseUnits","useEffect","ROUTER_ADDRESS","getAvailableTokens","pools","reduce","prev","curr","token0Address","token0Name","token1Address","token1Name","getCounterpartTokens","fromToken","filter","cur","findPoolByTokens","toToken","Array","isArray","undefined","find","isOperationPending","operationState","status","isOperationFailed","isOperationSucceeded","getFailureMessage","swapApproveState","swapExecuteState","errorMessage","getSuccessMessage","useAmountsOut","pairAddress","amountIn","isValidAmountIn","gt","areParamsValid","error","value","contract","router02","method","args","amounts","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"sources":["/home/suhaibinsari/Documents/GitHub/uniSwap Exchange/packages/react-app/src/utils/helpers.js"],"sourcesContent":["\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abis } from \"@my-app/contracts\";\nimport { useCall } from \"@usedapp/core\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { useEffect } from \"react\";\n\nimport { ROUTER_ADDRESS } from \"../config\";\n\nexport const getAvailableTokens = (pools) =>\n  pools.reduce((prev, curr) => {\n    prev[curr.token0Address] = curr.token0Name;\n    prev[curr.token1Address] = curr.token1Name;\n    return prev;\n  }, {});\n\nexport const getCounterpartTokens = (pools, fromToken) => pools\n  .filter((cur) => cur.token0Address === fromToken || cur.token1Address)\n  .reduce((prev, curr) => {\n    if (curr.token0Address === fromToken) {\n      prev[curr.token1Address] = curr.token1Name;\n    } else if (curr.token1Address === fromToken) {\n      prev[curr.token0Address] = curr.token0Name;\n    }\n    return prev;\n  }, {});\n\n\nexport const findPoolByTokens = (pools, fromToken, toToken) => {\n  if (!Array.isArray(pools) || !fromToken || !toToken) return undefined;\n\n  return pools.find((cur) =>\n    (cur.token0Address === fromToken && cur.token1Address === toToken) ||\n    (cur.token1Address === fromToken && cur.token0Address === toToken)\n  );\n};\n\nexport const isOperationPending = (operationState) => \n  operationState.status === \"PendingSignature\" || operationState.status === \"Mining\";\nexport const isOperationFailed = (operationState) =>\noperationState.status === \"Fail\" || operationState.status === \"Exception\";\nexport const isOperationSucceeded = (operationState) =>\noperationState.status === \"Success\";\n\nexport const getFailureMessage = (swapApproveState, swapExecuteState) => {\n  if (isOperationPending(swapApproveState) || isOperationPending(swapExecuteState)) {\n    return undefined;\n  }\n\n  if (isOperationFailed(swapApproveState)) {\n    return \"Approval failed - \" + swapApproveState.errorMessage;\n  }\n\n  if (isOperationFailed(swapExecuteState)) {\n    return \"Swap failed - \" + swapExecuteState.errorMessage;\n  }\n\n  return undefined;\n};\n\nexport const getSuccessMessage = (swapApproveState, swapExecuteState) => {\n  if (isOperationPending(swapExecuteState) ||isOperationPending(swapApproveState)) {\n    return undefined;\n  }\n\n  if (isOperationSucceeded(swapExecuteState)) {\n    return \"Swap executed successfully\";\n  }\n\n  if (isOperationSucceeded(swapApproveState)) {\n    return \"Approval successful\";\n  }\n\n  return undefined;\n};\n\nexport const useAmountsOut = (pairAddress, amountIn, fromToken, toToken) => {\n  const isValidAmountIn = amountIn.gt(parseUnits(\"0\"));\n  const areParamsValid = !!(pairAddress && isValidAmountIn && fromToken && toToken);\n\n  const { error, value } =\n    useCall(\n      areParamsValid && {\n        contract: new Contract(ROUTER_ADDRESS, abis.router02),\n        method: \"getAmountsOut\",\n        args: [amountIn, [fromToken, toToken]],\n      }\n    ) ?? {};\n  return error ? parseUnits(\"0\") : value?.amounts[1];\n}\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}