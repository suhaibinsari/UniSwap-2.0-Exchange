{"ast":null,"code":"import { useNetwork } from '../providers';\nimport { useConfig } from '../hooks';\n/**\n * Internal hook for reading current chainId for calls.\n * @internal Intended for internal use - use it on your own risk\n */\nexport function useChainId() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _a, _b, _c;\n  const {\n    network\n  } = useNetwork();\n  const {\n    readOnlyChainId\n  } = useConfig();\n  return (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.queryParams) === null || _a === void 0 ? void 0 : _a.chainId) !== null && _b !== void 0 ? _b : network.chainId) !== null && _c !== void 0 ? _c : readOnlyChainId;\n}","map":{"version":3,"sources":["../../../../src/hooks/useChainId.ts"],"names":[],"mappings":"AACA,SAAS,UAAU,QAAQ,cAAc;AACzC,SAAS,SAAS,QAAQ,UAAU;AAMpC;;;AAGG;AACH,OAAM,SAAU,UAAU,GAA6B;EAAA,IAA5B,IAAA,uEAA0B,CAAA,CAAE;;EACrD,MAAM;IAAE;EAAO,CAAE,GAAG,UAAU,EAAE;EAChC,MAAM;IAAE;EAAe,CAAE,GAAG,SAAS,EAAE;EACvC,OAAO,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,OAAO,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,eAAe;AACzE","sourceRoot":"","sourcesContent":["import { useNetwork } from '../providers';\nimport { useConfig } from '../hooks';\n/**\n * Internal hook for reading current chainId for calls.\n * @internal Intended for internal use - use it on your own risk\n */\nexport function useChainId(opts = {}) {\n    var _a, _b, _c;\n    const { network } = useNetwork();\n    const { readOnlyChainId } = useConfig();\n    return (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.queryParams) === null || _a === void 0 ? void 0 : _a.chainId) !== null && _b !== void 0 ? _b : network.chainId) !== null && _c !== void 0 ? _c : readOnlyChainId;\n}\n//# sourceMappingURL=useChainId.js.map"]},"metadata":{},"sourceType":"module"}