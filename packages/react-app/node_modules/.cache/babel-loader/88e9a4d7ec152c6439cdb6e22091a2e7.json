{"ast":null,"code":"import { useReadonlyNetworks } from '../providers/network';\nimport { useChainId } from './useChainId';\n/**\n * Gets a readonly provider for specific chainId.\n * @param opts.chainId Requested chainId. If not provided, the currently connected wallet's chainId will be used or the default one from the config.\n * @returns An ethers.js provider or undefined.\n * @public\n */\nexport function useReadonlyNetwork() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    queryParams: {\n      chainId: opts.chainId\n    }\n  });\n  const providers = useReadonlyNetworks();\n  return providers[chainId] !== undefined && chainId !== undefined ? {\n    provider: providers[chainId],\n    chainId: chainId\n  } : undefined;\n}","map":{"version":3,"sources":["../../../../src/hooks/useReadonlyProvider.tsx"],"names":[],"mappings":"AACA,SAAS,mBAAmB,QAAQ,sBAAsB;AAC1D,SAAS,UAAU,QAAQ,cAAc;AAYzC;;;;;AAKG;AACH,OAAM,SAAU,kBAAkB,GAAsC;EAAA,IAArC,IAAA,uEAAmC,CAAA,CAAE;EACtE,MAAM,OAAO,GAAG,UAAU,CAAC;IAAE,WAAW,EAAE;MAAE,OAAO,EAAE,IAAI,CAAC;IAAO;EAAE,CAAE,CAAC;EACtE,MAAM,SAAS,GAAG,mBAAmB,EAAE;EACvC,OAAO,SAAS,CAAC,OAAkB,CAAC,KAAK,SAAS,IAAI,OAAO,KAAK,SAAS,GACvE;IACE,QAAQ,EAAE,SAAS,CAAC,OAAkB,CAAE;IACxC,OAAO,EAAE;GACV,GACD,SAAS;AACf","sourceRoot":"","sourcesContent":["import { useReadonlyNetworks } from '../providers/network';\nimport { useChainId } from './useChainId';\n/**\n * Gets a readonly provider for specific chainId.\n * @param opts.chainId Requested chainId. If not provided, the currently connected wallet's chainId will be used or the default one from the config.\n * @returns An ethers.js provider or undefined.\n * @public\n */\nexport function useReadonlyNetwork(opts = {}) {\n    const chainId = useChainId({ queryParams: { chainId: opts.chainId } });\n    const providers = useReadonlyNetworks();\n    return providers[chainId] !== undefined && chainId !== undefined\n        ? {\n            provider: providers[chainId],\n            chainId: chainId,\n        }\n        : undefined;\n}\n//# sourceMappingURL=useReadonlyProvider.js.map"]},"metadata":{},"sourceType":"module"}