{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nexport function BlockNumbersProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const networks = useReadonlyNetworks();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  const {\n    isActive\n  } = useWindow();\n  useEffect(() => {\n    const onUnmount = Object.entries(networks).map(_ref2 => {\n      let [chainId, provider] = _ref2;\n      return subscribeToNewBlock(provider, Number(chainId), dispatch, isActive);\n    });\n    return () => {\n      onUnmount.forEach(fn => fn());\n    };\n  }, [networks]);\n  const debouncedState = useDebounce(state, 100);\n  return _jsx(BlockNumbersContext.Provider, {\n    value: debouncedState,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/blockNumbers/provider.tsx"],"names":[],"mappings":";AAAA,SAAoB,SAAS,EAAE,UAAU,QAAQ,OAAO;AACxD,SAAS,WAAW,QAAQ,gBAAgB;AAC5C,SAAS,mBAAmB,QAAQ,eAAe;AACnD,SAAS,mBAAmB,QAAQ,WAAW;AAC/C,SAAS,kBAAkB,QAAQ,mBAAmB;AACtD,SAAS,mBAAmB,QAAQ,+BAA+B;AACnE,SAAS,SAAS,QAAQ,cAAc;AAMxC,OAAM,SAAU,oBAAoB,OAAoB;EAAA,IAAnB;IAAE;EAAQ,CAAS;EACtD,MAAM,QAAQ,GAAG,mBAAmB,EAAE;EACtC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,kBAAkB,EAAE,CAAA,CAAE,CAAC;EAC5D,MAAM;IAAE;EAAQ,CAAE,GAAG,SAAS,EAAE;EAEhC,SAAS,CAAC,MAAK;IACb,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC;MAAA,IAAC,CAAC,OAAO,EAAE,QAAQ,CAAC;MAAA,OACjE,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAAA,EACnE;IAED,OAAO,MAAK;MACV,SAAS,CAAC,OAAO,CAAE,EAAE,IAAK,EAAE,EAAE,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;EAEd,MAAM,cAAc,GAAG,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC;EAE9C,OAAO,IAAA,CAAC,mBAAmB,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE,cAAc;IAAE,QAAQ,EAAE;EAAQ,CAAA,CAAI;AACpF","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nexport function BlockNumbersProvider({ children }) {\n    const networks = useReadonlyNetworks();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    const { isActive } = useWindow();\n    useEffect(() => {\n        const onUnmount = Object.entries(networks).map(([chainId, provider]) => subscribeToNewBlock(provider, Number(chainId), dispatch, isActive));\n        return () => {\n            onUnmount.forEach((fn) => fn());\n        };\n    }, [networks]);\n    const debouncedState = useDebounce(state, 100);\n    return _jsx(BlockNumbersContext.Provider, { value: debouncedState, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}