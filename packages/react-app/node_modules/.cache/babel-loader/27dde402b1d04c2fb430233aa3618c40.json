{"ast":null,"code":"import { useChainState } from './useChainState';\n/**\n * Returns an address of the multicall contract used on a given chain.\n * @public\n * @param queryParams see {@link QueryParams}.\n */\nexport function useMulticallAddress() {\n  let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _a;\n  return (_a = useChainState(queryParams)) === null || _a === void 0 ? void 0 : _a.multicallAddress;\n}","map":{"version":3,"sources":["../../../../src/hooks/useMulticallAddress.ts"],"names":[],"mappings":"AACA,SAAS,aAAa,QAAQ,iBAAiB;AAE/C;;;;AAIG;AACH,OAAM,SAAU,mBAAmB,GAA8B;EAAA,IAA7B,WAAA,uEAA2B,CAAA,CAAE;;EAC/D,OAAO,CAAA,EAAA,GAAA,aAAa,CAAC,WAAW,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,gBAAgB;AACrD","sourceRoot":"","sourcesContent":["import { useChainState } from './useChainState';\n/**\n * Returns an address of the multicall contract used on a given chain.\n * @public\n * @param queryParams see {@link QueryParams}.\n */\nexport function useMulticallAddress(queryParams = {}) {\n    var _a;\n    return (_a = useChainState(queryParams)) === null || _a === void 0 ? void 0 : _a.multicallAddress;\n}\n//# sourceMappingURL=useMulticallAddress.js.map"]},"metadata":{},"sourceType":"module"}