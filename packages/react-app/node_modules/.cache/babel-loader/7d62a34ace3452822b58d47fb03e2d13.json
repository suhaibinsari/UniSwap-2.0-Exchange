{"ast":null,"code":"import { abis } from \"@my-app/contracts\";\nexport async function getPairsInfo(pairAddresses, web3) {\n  const pairsInfo = [];\n  const pairABI = abis.pair;\n  const tokenABI = abis.erc20.abi;\n  for (let i = 0; i < pairAddresses.length; ++i) {\n    const pairAddress = pairAddresses[i];\n    const pair = new web3.eth.Contract(pairABI, pairAddresses[i]);\n    const token0Address = await pair.methods.token0().call();\n    const token1Address = await pair.methods.token1().call();\n    const token0Contract = new web3.eth.Contract(tokenABI, token0Address);\n    const token1Contract = new web3.eth.Contract(tokenABI, token1Address);\n    const token0Name = await token0Contract.methods.name().call();\n    const token1Name = await token1Contract.methods.name().call();\n    pairsInfo.push({\n      address: pairAddress,\n      token0Address,\n      token1Address,\n      token0Name,\n      token1Name\n    });\n  }\n  return pairsInfo;\n}","map":{"version":3,"names":["abis","getPairsInfo","pairAddresses","web3","pairsInfo","pairABI","pair","tokenABI","erc20","abi","i","length","pairAddress","eth","Contract","token0Address","methods","token0","call","token1Address","token1","token0Contract","token1Contract","token0Name","name","token1Name","push","address"],"sources":["/home/suhaibinsari/Documents/GitHub/uniSwap Exchange/packages/react-app/src/utils/getPairsInfo.js"],"sourcesContent":["import { abis } from \"@my-app/contracts\";\n\nexport async function getPairsInfo(pairAddresses, web3) {\n  const pairsInfo = [];\n  const pairABI = abis.pair;\n  const tokenABI = abis.erc20.abi;\n\n  for (let i = 0; i < pairAddresses.length; ++i) {\n    const pairAddress = pairAddresses[i];\n    const pair = new web3.eth.Contract(pairABI, pairAddresses[i]);\n\n    const token0Address = await pair.methods.token0().call();\n    const token1Address = await pair.methods.token1().call();\n    const token0Contract = new web3.eth.Contract(tokenABI, token0Address);\n    const token1Contract = new web3.eth.Contract(tokenABI, token1Address);\n    const token0Name = await token0Contract.methods.name().call();\n    const token1Name = await token1Contract.methods.name().call();\n\n    pairsInfo.push({\n      address: pairAddress,\n      token0Address,\n      token1Address,\n      token0Name,\n      token1Name\n    });\n  }\n\n  return pairsInfo;\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AAExC,OAAO,eAAeC,YAAY,CAACC,aAAa,EAAEC,IAAI,EAAE;EACtD,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,OAAO,GAAGL,IAAI,CAACM,IAAI;EACzB,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,KAAK,CAACC,GAAG;EAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,aAAa,CAACS,MAAM,EAAE,EAAED,CAAC,EAAE;IAC7C,MAAME,WAAW,GAAGV,aAAa,CAACQ,CAAC,CAAC;IACpC,MAAMJ,IAAI,GAAG,IAAIH,IAAI,CAACU,GAAG,CAACC,QAAQ,CAACT,OAAO,EAAEH,aAAa,CAACQ,CAAC,CAAC,CAAC;IAE7D,MAAMK,aAAa,GAAG,MAAMT,IAAI,CAACU,OAAO,CAACC,MAAM,EAAE,CAACC,IAAI,EAAE;IACxD,MAAMC,aAAa,GAAG,MAAMb,IAAI,CAACU,OAAO,CAACI,MAAM,EAAE,CAACF,IAAI,EAAE;IACxD,MAAMG,cAAc,GAAG,IAAIlB,IAAI,CAACU,GAAG,CAACC,QAAQ,CAACP,QAAQ,EAAEQ,aAAa,CAAC;IACrE,MAAMO,cAAc,GAAG,IAAInB,IAAI,CAACU,GAAG,CAACC,QAAQ,CAACP,QAAQ,EAAEY,aAAa,CAAC;IACrE,MAAMI,UAAU,GAAG,MAAMF,cAAc,CAACL,OAAO,CAACQ,IAAI,EAAE,CAACN,IAAI,EAAE;IAC7D,MAAMO,UAAU,GAAG,MAAMH,cAAc,CAACN,OAAO,CAACQ,IAAI,EAAE,CAACN,IAAI,EAAE;IAE7Dd,SAAS,CAACsB,IAAI,CAAC;MACbC,OAAO,EAAEf,WAAW;MACpBG,aAAa;MACbI,aAAa;MACbI,UAAU;MACVE;IACF,CAAC,CAAC;EACJ;EAEA,OAAOrB,SAAS;AAClB"},"metadata":{},"sourceType":"module"}